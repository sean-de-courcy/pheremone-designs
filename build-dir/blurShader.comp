#version 430

layout(local_size_x = 1, local_size_y = 1) in;
layout(rgba32f, binding = 0) uniform image2D img_input;
layout(rgba32f, binding = 1) uniform image2D img_output;
void main () {
    ivec2 coords = ivec2(gl_GlobalInvocationID.xy);
    vec4 pixel = imageLoad(img_input, coords);
    vec3 total = vec3(0.0, 0.0, 0.0);
    for (int i = -1; i <= 1; i += 1) {
        for (int j = -1; j <= 1; j += 1) {
            total.r += imageLoad(img_input, ivec2(coords.x + i, coords.y + j)).r;
            total.g += imageLoad(img_input, ivec2(coords.x + i, coords.y + j)).g;
            total.b += imageLoad(img_input, ivec2(coords.x + i, coords.y + j)).b;
        }
    }
    float avgr = total.r / 9.0; 
    avgr -= avgr*0.07 + 0.001;
    if (avgr < 0) {
        avgr = 0;
    }
    float avgg = total.g / 9.0; 
    avgg -= avgg*0.07 + 0.001;
    if (avgg < 0) {
        avgg = 0;
    }
    float avgb = total.b / 9.0; 
    avgb -= avgb*0.07 + 0.001;
    if (avgb < 0) {
        avgb = 0;
    }
    pixel.rgb = vec3(avgr, avgg, avgb);
    imageStore(img_output, coords, pixel);
}